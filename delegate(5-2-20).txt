using System;

namespace delegate_program_example_
{
    class Program
    {
		

			// Declaring the delegates 
			// Here return type and parameter type should 
			// be same as the return type and parameter type 
			// of the two methods 
			// "addnum" and "mulnum" are two delegate names 
			public delegate void addnum(int a, int b);
			public delegate void mulnum(int a, int b);

			// method "sum" 
			public void sum(int a, int b)
			{
				Console.WriteLine("(100 + 440) = {0}", a + b);
			}

			// method "multiply" 
			public void multiply(int a, int b)
			{
				Console.WriteLine("(100*300) = {0}", a * b);
			}

			// Main Method 
			public static void Main(String[] args)
			{

				// creating object "obj" of class "Program" 
				Program obj = new Program();

				// creating object of delegate, name as "del_obj1" 
				// for method "sum" and "del_obj2" for method "multiply" & 
				// pass the parameter as the two methods by class object "obj" 
				// instantiating the delegates 
				addnum del_obj1 = new addnum(obj.sum);
				mulnum del_obj2 = new mulnum(obj.multiply);

				// pass the values to the methods by delegate object 
				del_obj1(100, 440);
				del_obj2(100, 300);

				// These can be written as using 
				// "Invoke" method 
				// del_obj1.Invoke(100, 440); 
				// del_obj2.Invoke(100,360); 
			}
		}
	}

 
